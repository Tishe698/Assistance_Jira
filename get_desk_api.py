import requests
import json
import os
from dotenv import load_dotenv
from cookie_manager import refresh_cookies_on_401

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
url = {
    "ARM_QA": os.getenv("JIRA_API_ARM_QA")
}

def get_desk_api():
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ Jira API —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –∫—É–∫–æ–≤ –ø—Ä–∏ 401 –æ—à–∏–±–∫–µ
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        try:
            with open('cookies.json', "r") as cookie_file:
                content = cookie_file.read().strip()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π
                if not content:
                    print("‚ö†Ô∏è –§–∞–π–ª cookies.json –ø—É—Å—Ç–æ–π - —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–µ –∫—É–∫–∏...")
                    if refresh_cookies_on_401():
                        return get_desk_api()  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫—É–∫–æ–≤
                    return None
                
                # –ü–∞—Ä—Å–∏–º JSON
                data = json.loads(content)
                if not data.get('cookies') or not isinstance(data['cookies'], dict):
                    print("‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ cookies.json - —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–µ –∫—É–∫–∏...")
                    if refresh_cookies_on_401():
                        return get_desk_api()  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫—É–∫–æ–≤
                    return None
                
                cookies = data['cookies']
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –≤–∞–∂–Ω—ã–π –∫—É–∫
                important_cookies = ['JSESSIONID', 'seraph.rememberme.cookie', 'atlassian.xsrf.token']
                if not any(cookie in cookies for cookie in important_cookies):
                    print("‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤–∞–∂–Ω—ã–µ –∫—É–∫–∏ - —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–µ –∫—É–∫–∏...")
                    if refresh_cookies_on_401():
                        return get_desk_api()  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫—É–∫–æ–≤
                    return None
                    
        except (json.JSONDecodeError, KeyError) as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ cookies.json: {e} - —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–µ –∫—É–∫–∏...")
            if refresh_cookies_on_401():
                return get_desk_api()  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫—É–∫–æ–≤
            return None
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        response = requests.get(url=url["ARM_QA"], cookies=cookies)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
        print("–°—Ç–∞—Ç—É—Å:", response.status_code)
        
        # –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–∞ 401 –æ—à–∏–±–∫–∞ - –æ–±–Ω–æ–≤–ª—è–µ–º –∫—É–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å
        if response.status_code == 401:
            print("üîÑ –ü–æ–ª—É—á–µ–Ω–∞ 401 –æ—à–∏–±–∫–∞ - –æ–±–Ω–æ–≤–ª—è—é –∫—É–∫–∏...")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –∫—É–∫–∏
            if refresh_cookies_on_401():
                # –ß–∏—Ç–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫—É–∫–∏
                with open('cookies.json', "r") as cookie_file:
                    data = json.load(cookie_file)
                    cookies = data['cookies']
                
                # –ü–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º–∏ –∫—É–∫–∞–º–∏
                response = requests.get(url=url["ARM_QA"], cookies=cookies)
                print(f"üîÑ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å - —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫—É–∫–∏")
        
        return response
        
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª cookies.json –Ω–µ –Ω–∞–π–¥–µ–Ω - —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–µ –∫—É–∫–∏...")
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –∫—É–∫–∏ —Å –Ω—É–ª—è
        if refresh_cookies_on_401():
            return get_desk_api()  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫—É–∫–æ–≤
        return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ get_desk_api: {e}")
        return None

#–ø–æ–ª—É—á–∞–µ–º –ø–æ –¥–æ—Å–∫–µ –∫–æ–ª–æ–Ω–∫–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á –≤ –Ω–∏—Ö
def get_column_count_task(selected_column=None, names_only=False):
    try:
        response = get_desk_api()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –∏ —É—Å–ø–µ—à–µ–Ω
        if not response or response.status_code != 200:
            return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞"
        
        response_json = response.json()
        
        if names_only:
            columns = []
            for column in response_json['columnsData']['columns']:
                columns.append(column['name'])
            return columns
        
        result = ""
        for column in response_json['columnsData']['columns']:
            name_column = column['name']
            task_in_desk = column['statisticsFieldValue']
            
            if selected_column and name_column != selected_column:
                continue
                
            result += f'–Ω–∞ –¥–æ—Å–∫–µ: {name_column} - {int(task_in_desk)} –∑–∞–¥–∞—á(a)\n'
            statusIDs = column['statusIds']
            count = 0
            
            for issue in response_json['issuesData']['issues']:
                if issue['statusId'] in statusIDs:
                    count += 1
                    result += f"{count:>2}. [{issue['key']}] {issue['summary']} (üë§ {issue.get('assigneeName', '–Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω')})\n"
            
            if count == 0:
                result += "–ù–µ—Ç –∑–∞–¥–∞—á –≤ —ç—Ç–æ–π –∫–æ–ª–æ–Ω–∫–µ.\n"
        
        return result
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ get_column_count_task: {e}")
        return "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö"

