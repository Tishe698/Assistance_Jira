# ==============================================
# –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ú–ï–ù–ï–î–ñ–ï–† –ö–£–ö–û–í JIRA
# ==============================================
# –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫—É–∫–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ 401 –æ—à–∏–±–∫–∏
# –∏—Å–ø–æ–ª—å–∑—É—è Selenium –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç

import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import WebDriverException, NoSuchElementException
from selenium.webdriver.chrome.options import Options
from auth_config import JIRA_URL, JIRA_LOGIN, JIRA_PASSWORD
from config import DEBUG_MODE

def setup_chrome_driver():
    """
    –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Chrome –¥—Ä–∞–π–≤–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    """
    chrome_options = Options()
    chrome_options.add_argument("--headless")  # –†–∞–±–æ—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--window-size=1920,1080")
    chrome_options.add_argument("--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36")
    
    try:
        driver = webdriver.Chrome(options=chrome_options)
        return driver
    except Exception as e:
        if DEBUG_MODE:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Chrome –¥—Ä–∞–π–≤–µ—Ä–∞: {e}")
        return None

def examination_join(driver):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞
    """
    try:
        driver.get(f"{JIRA_URL}/login.jsp")
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.TAG_NAME, "body"))
        )
        if DEBUG_MODE:
            print(f"üü¢ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∞: {driver.title}")
        return True
    except WebDriverException as e:
        if DEBUG_MODE:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Jira: {e}")
        return False

def continued_authorization(driver):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ Jira
    """
    try:
        if DEBUG_MODE:
            print("üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞...")
        
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞ —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ –∫–ª–∞—Å—Å—É
            login_button = WebDriverWait(driver, 5).until(
                EC.element_to_be_clickable((By.CLASS_NAME, "css-1erlht4"))
            )
            login_button.click()
        except:
            if DEBUG_MODE:
                print("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –ø–æ –∫–ª–∞—Å—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É...")
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ —Ç–µ–∫—Å—Ç—É
            try:
                login_button = driver.find_element(By.XPATH, "//button[contains(text(), '–í–æ–π—Ç–∏')]")
                login_button.click()
            except:
                if DEBUG_MODE:
                    print("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
        
        time.sleep(2)

        if DEBUG_MODE:
            print("üîç –ò—â–µ–º –ø–æ–ª—è –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è...")
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—è –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è
        login_field = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "login-form-username"))
        )
        pass_field = driver.find_element(By.ID, "login-form-password")

        if DEBUG_MODE:
            print("üìù –í–≤–æ–¥–∏–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...")

        # –í–≤–æ–¥–∏–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        login_field.clear()
        login_field.send_keys(JIRA_LOGIN)
        pass_field.clear()
        pass_field.send_keys(JIRA_PASSWORD)

        if DEBUG_MODE:
            print("‚úÖ –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã")

        return True

    except Exception as e:
        if DEBUG_MODE:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞/–ø–∞—Ä–æ–ª—è: {e}")
        return False

def click_join(driver):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
    """
    try:
        if DEBUG_MODE:
            print("üîç –ò—â–µ–º —á–µ–∫–±–æ–∫—Å '–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è'...")
        
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–µ–∫–±–æ–∫—Å "–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è"
        try:
            remember_checkbox = WebDriverWait(driver, 10).until(
                EC.element_to_be_clickable((By.ID, "login-form-remember-me"))
            )
            if not remember_checkbox.is_selected():
                driver.execute_script("arguments[0].click();", remember_checkbox)
                if DEBUG_MODE:
                    print("‚úÖ –ß–µ–∫–±–æ–∫—Å '–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è' –æ—Ç–º–µ—á–µ–Ω")
        except:
            if DEBUG_MODE:
                print("‚ö†Ô∏è –ß–µ–∫–±–æ–∫—Å '–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è' –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")

        if DEBUG_MODE:
            print("üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞...")
        
        # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞
        login_button = driver.find_element(By.ID, "login-form-submit")
        login_button.click()
        
        if DEBUG_MODE:
            print("üîÑ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞...")

        # –ñ–¥–µ–º —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ - –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
        success = False
        try:
            WebDriverWait(driver, 15).until(
                EC.presence_of_element_located((By.ID, "header-details-user-fullname"))
            )
            success = True
        except:
            try:
                # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
                WebDriverWait(driver, 15).until(
                    EC.presence_of_element_located((By.CLASS_NAME, "user-avatar"))
                )
                success = True
            except:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ URL
                if "dashboard" in driver.current_url or "browse" in driver.current_url:
                    success = True
        
        if success:
            if DEBUG_MODE:
                print("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç Jira")
            return True
        else:
            if DEBUG_MODE:
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥")
            return True  # –í—Å–µ —Ä–∞–≤–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True, —Ç–∞–∫ –∫–∞–∫ –∫—É–∫–∏ –º–æ–≥–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è

    except NoSuchElementException:
        if DEBUG_MODE:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        return False
    except Exception as e:
        if DEBUG_MODE:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ –∫–Ω–æ–ø–∫–µ –≤—Ö–æ–¥–∞: {e}")
        return False

def extract_cookies_from_driver(driver):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫—É–∫–∏ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
    """
    try:
        cookies = {}
        for cookie in driver.get_cookies():
            cookies[cookie['name']] = cookie['value']
        
        if DEBUG_MODE:
            print(f"üç™ –ò–∑–≤–ª–µ—á–µ–Ω–æ {len(cookies)} –∫—É–∫–æ–≤")
        return cookies
    except Exception as e:
        if DEBUG_MODE:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫—É–∫–æ–≤: {e}")
        return {}

def save_cookies_to_file(cookies):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫—É–∫–∏ –≤ —Ñ–∞–π–ª cookies.json
    """
    try:
        data = {"cookies": cookies}
        with open('cookies.json', 'w', encoding='utf-8') as f:
            json.dump(data, f, indent=4, ensure_ascii=False)
        
        if DEBUG_MODE:
            print("üíæ –ö—É–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ cookies.json")
        return True
    except Exception as e:
        if DEBUG_MODE:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—É–∫–æ–≤: {e}")
        return False

def login_and_get_cookies():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Ö–æ–¥ –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤—ã–µ –∫—É–∫–∏
    """
    if DEBUG_MODE:
        print("üîÑ –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫—É–∫–æ–≤...")
    
    driver = setup_chrome_driver()
    if not driver:
        return False
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if not examination_join(driver):
            return False
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if not continued_authorization(driver):
            return False
        
        # –í—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
        if not click_join(driver):
            return False
        
        # –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –∫—É–∫–æ–≤
        time.sleep(3)
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫—É–∫–∏
        cookies = extract_cookies_from_driver(driver)
        if not cookies:
            return False
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫—É–∫–∏ –≤ —Ñ–∞–π–ª
        if not save_cookies_to_file(cookies):
            return False
        
        if DEBUG_MODE:
            print("‚úÖ –ö—É–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        return True
        
    except Exception as e:
        if DEBUG_MODE:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É–∫–æ–≤: {e}")
        return False
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        driver.quit()

def refresh_cookies_on_401():
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∫—É–∫–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ 401 –æ—à–∏–±–∫–∏
    """
    if DEBUG_MODE:
        print("üîÑ –ü–æ–ª—É—á–µ–Ω–∞ 401 –æ—à–∏–±–∫–∞ - –æ–±–Ω–æ–≤–ª—è—é –∫—É–∫–∏...")
    
    success = login_and_get_cookies()
    
    if success and DEBUG_MODE:
        print("‚úÖ –ö—É–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã, –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫—É–∫–∏")
    
    return success
